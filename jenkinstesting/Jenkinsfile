pipeline {
    agent { label 'windows' }

    environment {
        DEPLOY_DIR = "P:/Jenkinss"
    }

    stages {
        stage('Prepare Deploy Folder') {
            steps {
                bat 'if not exist P:\\Jenkinss mkdir P:\\Jenkinss'
                echo "Deploy folder prepared"
            }
        }

        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/rajuneduri/jenkins.git'
                echo "Successfully pulled the code"
            }
        }

        stage('Build with Maven') {
            steps {
                dir('jenkinstesting') {
                    bat 'mvn clean install'
                }
                echo "Successfully created JAR"
            }
        }

        stage('Run Application in Background') {
            steps {
                script {
                    def jarPath = "${env.WORKSPACE}\\jenkinstesting\\target\\jenkinstesting-0.0.1-SNAPSHOT.jar"

                    echo "Running application from: ${jarPath}"

                    // Launch the application in the background (no new window, persistent)
                    bat "start /b java -jar \"${jarPath}\""
                }
            }
        }

    }

    post {
     success {
        echo 'Build and Deployment Successful!'
        echo 'Email Trigger'
        script {
            def commitAuthor = bat(
                script: 'git log -1 --pretty=format:"%an <%ae>"',
                returnStdout: true
            ).trim()

            def commitHash = bat(
                script: 'git rev-parse --short HEAD',
                returnStdout: true
            ).trim()

            emailext (
                to: 'rajuneduri2255@gmail.com',
                subject: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """<p><b>Build Status:</b> SUCCESS</p>
                         <p><b>Job:</b> ${env.JOB_NAME} #${env.BUILD_NUMBER}</p>
                         <p><b>Triggered By:</b> ${currentBuild.getBuildCauses()[0].userName ?: 'Auto/Webhook'}</p>
                         <p><b>Last Commit:</b> ${commitHash} by ${commitAuthor}</p>
                         <p><b>View Build:</b> <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>""",
                mimeType: 'text/html'
            )
           }
      }
       failure {
               echo 'Pipeline Failed!'

               emailext (
                   to: 'rajuneduri2255@gmail.com',
                   subject: "FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                   body: """<p>Unfortunately, the job <b>${env.JOB_NAME}</b> #${env.BUILD_NUMBER} has failed.</p>
                            <p>Please review the build at: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>""",
                   mimeType: 'text/html'
               )
           }
    }
  


}
